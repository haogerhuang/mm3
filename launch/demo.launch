<launch>
    <!-- Include helps you launch other launch files within this launch file-->
    	<!-- For file tag, mention the gazebo_ros empty world's launch file -->
        <!-- For the arg name, give any name of your choice to this world -->
        <!-- for the value tag, provide the path to the world file that you downloaded -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find mm3)/worlds/wall1.world"/>
 </include>
	<param name= "robot_description" command="$(find xacro)/xacro $(find mm3)/urdf/mm3.xacro" />
    <!-- Add in your robot name in the value tag -->
    <param name = "my_robot" value="mmrobot"/>
	<arg name ="init_pose" value="-x 0 -y 0 -z 0.5 -R 0 -P 0 -Y 0"/>

    <!-- This command adds the controller variables you defined in the config file into ros's parameter list. Simply add the file name in the file tag -->
	<rosparam file="$(find mm3)/config/robot_arm_controllers.yaml" command="load"/>

	<!-- Node for publishing base footprint -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False"/>
    </node>

    <!-- TF node that gives the static transformation between the world map and the base link of your robot. Change /base_link to the /root link name of your robot -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_base" args="1 0 0 0 0 0 1 /map /base_link 10" />

    <!-- Controller spawner: Starts all the defined controllers with their configs. Just add your controller names defined in your config file into the args tag below   -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    	output="screen" ns="/mmrobot" args=" joint_state_controller linear_joint l_arm_joint1 l_arm_joint2 l_arm_joint3 l_gripper_joint r_arm_joint1 r_arm_joint2 r_arm_joint3 r_gripper_joint mobile_controller" />

    <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="$(arg init_pose) -param robot_description -urdf -model mmrobot"
    output="screen" />
    <node
        name="fake_joint_calibration" pkg="rostopic" type="rostopic"
        args="pub /calibrated std_msgs/Bool true" />


</launch>
